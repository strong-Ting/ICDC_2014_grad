$date
    Sep 17, 2020  16:04:16
$end
$version
    TOOL:	ncsim	15.20-s039
$end
$timescale
    1 ps
$end

$scope module testfixture2 $end

$scope module u_rtl $end

$scope module \mem_counter_reg[3]  $end
$var reg       1 !    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[4]  $end
$var reg       1 "    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[5]  $end
$var reg       1 #    NOTIFIER  $end
$upscope $end


$scope module \data_buffer_index_reg[4]  $end
$var reg       1 $    NOTIFIER  $end
$upscope $end


$scope module \delay_buffer_reg[0]  $end
$var reg       1 %    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[6]  $end
$var reg       1 &    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[1]  $end
$var reg       1 '    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[2]  $end
$var reg       1 (    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[0]  $end
$var reg       1 )    NOTIFIER  $end
$upscope $end


$scope module \mem_counter_reg[7]  $end
$var reg       1 *    NOTIFIER  $end
$upscope $end


$scope module \current_state_reg[1]  $end
$var reg       1 +    NOTIFIER  $end
$upscope $end


$scope module \data_buffer_index_reg[3]  $end
$var reg       1 ,    NOTIFIER  $end
$upscope $end


$scope module \data_buffer_index_reg[2]  $end
$var reg       1 -    NOTIFIER  $end
$upscope $end


$scope module \data_buffer_index_reg[1]  $end
$var reg       1 .    NOTIFIER  $end
$upscope $end


$scope module so_valid_reg $end
$var reg       1 /    NOTIFIER  $end
$upscope $end


$scope module oem_finish_reg $end
$var reg       1 0    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[7]  $end
$var reg       1 1    NOTIFIER  $end
$upscope $end


$scope module so_data_reg $end
$var reg       1 2    NOTIFIER  $end
$upscope $end


$scope module \delay_buffer_reg[4]  $end
$var reg       1 3    NOTIFIER  $end
$upscope $end


$scope module \delay_buffer_reg[3]  $end
$var reg       1 4    NOTIFIER  $end
$upscope $end


$scope module \delay_buffer_reg[2]  $end
$var reg       1 5    NOTIFIER  $end
$upscope $end


$scope module \delay_buffer_reg[1]  $end
$var reg       1 6    NOTIFIER  $end
$upscope $end


$scope module \current_state_reg[0]  $end
$var reg       1 7    NOTIFIER  $end
$upscope $end


$scope module \counter_16bit_reg[0]  $end
$var reg       1 8    NOTIFIER  $end
$upscope $end


$scope module \counter_16bit_reg[3]  $end
$var reg       1 9    NOTIFIER  $end
$upscope $end


$scope module \counter_16bit_reg[2]  $end
$var reg       1 :    NOTIFIER  $end
$upscope $end


$scope module \serial_counter_reg[4]  $end
$var reg       1 ;    NOTIFIER  $end
$upscope $end


$scope module \serial_counter_reg[3]  $end
$var reg       1 <    NOTIFIER  $end
$upscope $end


$scope module \serial_counter_reg[1]  $end
$var reg       1 =    NOTIFIER  $end
$upscope $end


$scope module \data_buffer_index_reg[0]  $end
$var reg       1 >    NOTIFIER  $end
$upscope $end


$scope module \serial_counter_reg[2]  $end
$var reg       1 ?    NOTIFIER  $end
$upscope $end


$scope module \serial_counter_reg[0]  $end
$var reg       1 @    NOTIFIER  $end
$upscope $end


$scope module \oem_addr_reg[3]  $end
$var reg       1 A    NOTIFIER  $end
$upscope $end


$scope module \oem_addr_reg[2]  $end
$var reg       1 B    NOTIFIER  $end
$upscope $end


$scope module \oem_addr_reg[1]  $end
$var reg       1 C    NOTIFIER  $end
$upscope $end


$scope module \oem_addr_reg[0]  $end
$var reg       1 D    NOTIFIER  $end
$upscope $end


$scope module \oem_addr_reg[4]  $end
$var reg       1 E    NOTIFIER  $end
$upscope $end


$scope module odd_even_reg $end
$var reg       1 F    NOTIFIER  $end
$upscope $end


$scope module even4_wr_reg $end
$var reg       1 G    NOTIFIER  $end
$upscope $end


$scope module odd4_wr_reg $end
$var reg       1 H    NOTIFIER  $end
$upscope $end


$scope module odd1_wr_reg $end
$var reg       1 I    NOTIFIER  $end
$upscope $end


$scope module even1_wr_reg $end
$var reg       1 J    NOTIFIER  $end
$upscope $end


$scope module odd3_wr_reg $end
$var reg       1 K    NOTIFIER  $end
$upscope $end


$scope module even3_wr_reg $end
$var reg       1 L    NOTIFIER  $end
$upscope $end


$scope module odd2_wr_reg $end
$var reg       1 M    NOTIFIER  $end
$upscope $end


$scope module even2_wr_reg $end
$var reg       1 N    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[6]  $end
$var reg       1 O    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[5]  $end
$var reg       1 P    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[4]  $end
$var reg       1 Q    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[3]  $end
$var reg       1 R    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[2]  $end
$var reg       1 S    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[1]  $end
$var reg       1 T    NOTIFIER  $end
$upscope $end


$scope module \DAC_buffer_reg[0]  $end
$var reg       1 U    NOTIFIER  $end
$upscope $end


$scope module \counter_16bit_reg[1]  $end
$var reg       1 V    NOTIFIER  $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
x!
x"
x#
x$
x%
x&
x'
x(
x)
x*
x+
x,
x-
x.
x/
x0
x1
x2
x3
x4
x5
x6
x7
x8
x9
x:
x;
x<
x=
x>
x?
x@
xA
xB
xC
xD
xE
xF
xG
xH
xI
xJ
xK
xL
xM
xN
xO
xP
xQ
xR
xS
xT
xU
xV
$end
#86192000
